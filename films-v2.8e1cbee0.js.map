{"mappings":"AAAA,IAAMA,OAASC,SAASC,cAAc,aAChCC,SAAW,gCACXC,SAAW,qBACXC,QAAU,mCACVC,KAAOL,SAASC,cAAc,YAEhCK,YAAc,EAEdC,QAAU,CACZC,KAAM,KACNC,WAAY,QACZC,UAAW,GAGTC,SAAW,IAAIC,qBAAqBC,OAAQN,SAMhD,SAASM,OAAOC,EAASC,GAEvBD,EAAQE,SAAQ,SAAAC,GACVA,EAAMC,iBAEsBC,QAAtBC,IAAIN,GAGZO,YAD6Bf,aAAd,GAEZgB,MAAK,SAAAC,GACJlB,KAAKmB,mBAAmB,YAAaC,aAAaF,EAAKG,UACnDH,EAAKI,OAASJ,EAAKK,aAEDb,EAAXc,UAAU9B,O,IAGtB+B,OAAM,SAAAC,G,OAAOZ,QAAQC,IAAIW,E,QAKlC,SAASN,aAAaO,GACpB,OAAOA,EACJC,KACC,SAAAC,G,IAAGC,EAAWD,EAAXC,YAAaC,EAAKF,EAALE,M,MAAY,sDACkCC,OAArBF,EAAY,WACjDE,OAD0DD,EAAM,gBAC1DC,OAAND,EAAM,e,IAGXE,KAAK,G,CAGV,SAASjB,c,IAAYM,EAAAY,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAD,EAC1B,OAAOE,MAAM,GAAcJ,OAAXnC,UAA+BmC,OAApBlC,SAAS,aAA2BkC,OAAhBjC,QAAQ,UAAaiC,OAALV,IAAQL,MACrE,SAAAoB,GACE,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAGvB,OAAOH,EAAKI,M,IAMlBzB,cACGC,MAAK,SAAAC,GACJlB,KAAKmB,mBAAmB,YAAaC,aAAaF,EAAKG,UACvDf,SAASoC,QAAQhD,O,IAElB+B,OAAM,SAAAC,G,OAAOZ,QAAQC,IAAIW,E","sources":["src/js/films-v2.js"],"sourcesContent":["const target = document.querySelector('.js-guard');\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst ENDPOINT = 'trending/movie/day';\nconst API_KEY = '4a5d686b020f509eaf7a11c7e6302126';\nconst list = document.querySelector('.js-list');\n\nlet currentPage = 1;\n// - https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#creating_an_intersection_observer\nlet options = {\n  root: null,\n  rootMargin: '300px',\n  threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(onLoad, options);\n\n// function onLoad(evt) {\n//   console.log(evt);\n// }\n\nfunction onLoad(entries, observer) {\n  //console.log(entries);\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      // Приблизились к целевому эллементу <div>\n      console.log(entries);\n      // А дальше можем делать как с кнопкой loadMore\n      currentPage += 1;\n      getTrending(currentPage)\n        .then(data => {\n          list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n          if (data.page === data.total_pages) {\n            //теперь нужно отключать\n            observer.unobserve(target);\n          }\n        })\n        .catch(err => console.log(err));\n    }\n  });\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ poster_path, title }) => `<li>\n    <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\">\n    <h2>${title}</h2>\n</li>`\n    )\n    .join('');\n}\n\nfunction getTrending(page = 1) {\n  return fetch(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}&page=${page}`).then(\n    resp => {\n      if (!resp.ok) {\n        throw new Error(resp.statusText);\n      }\n\n      return resp.json();\n    }\n  );\n}\n\n// Первый запрос на показ первой загруженной страницы\ngetTrending()\n  .then(data => {\n    list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n    observer.observe(target); // +\n  })\n  .catch(err => console.log(err));\n"],"names":["target","document","querySelector","BASE_URL","ENDPOINT","API_KEY","list","currentPage","options","root","rootMargin","threshold","observer","IntersectionObserver","onLoad","entries","observer1","forEach","entry","isIntersecting","console","log","getTrending","then","data","insertAdjacentHTML","createMarkup","results","page","total_pages","unobserve","catch","err","arr","map","param","poster_path","title","concat","join","arguments","length","fetch","resp","ok","Error","statusText","json","observe"],"version":3,"file":"films-v2.8e1cbee0.js.map"}