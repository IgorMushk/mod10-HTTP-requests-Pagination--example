{"mappings":"iiBAEA,ICsBIA,EAtByBC,EADzBC,EAAA,UACoCC,SAAS,CAACC,SAAW,CAAC,EAAE,YAAYC,KAAO,SAASC,EAAUC,EAAOC,EAAQC,EAASC,GAC1H,IAAIC,EAAQC,EAAON,EAAUO,OAAQC,EAAOR,EAAUS,iBAAkBC,EAAiBV,EAAUU,gBAAkB,SAASC,EAAQC,GAClI,GAAIC,OAAOC,UAAUC,eAAeC,KAAKL,EAAQC,GAC/C,OAAOD,EAAOC,E,EAKtB,MAAO,wDACHJ,EAAOF,EAAkB,MAAVL,EAAiBS,EAAeT,EAAO,QAAUA,EAASA,IACzE,mHACWO,EAAJF,EAAgF,OAAvED,EAAoB,MAAVJ,EAAiBS,EAAeT,EAAO,QAAUA,GAAmBS,EAAeL,EAAO,QAAUA,EAASJ,IACvI,oIACcO,EAAPF,EAAgF,OAAvED,EAAoB,MAAVJ,EAAiBS,EAAeT,EAAO,QAAUA,GAAmBS,EAAeL,EAAO,cAAgBA,EAASJ,IAC7I,mHACSO,EAAFF,EAA+E,OAAtED,EAAoB,MAAVJ,EAAiBS,EAAeT,EAAO,OAASA,GAAmBS,EAAeL,EAAO,WAAaA,EAASJ,IACzI,kGACUO,EAAHF,EAA+E,OAAtED,EAAoB,MAAVJ,EAAiBS,EAAeT,EAAO,OAASA,GAAmBS,EAAeL,EAAO,UAAYA,EAASJ,IACxI,2FACAO,EAAOF,EAAkF,OAAzED,EAAoB,MAAVJ,EAAiBS,EAAeT,EAAO,UAAYA,GAAmBS,EAAeL,EAAO,OAASA,EAASJ,IACxI,mC,EACJgB,SAAU,ICZNC,EAAgBC,SAASC,cAAc,mBACvCC,EAAmBF,SAASC,cAAc,qBAE1CE,EAAkC,SAAAC,GACtC,IAAMC,EAAO,IAAIC,KAAe,IAAVF,GAEtB,MAAO,GAGFG,OAHK,GAAmBA,OAAhBF,EAAKG,YAAaC,SAC7B,EACA,GACA,KAAyCF,OAAtC,GAAqBA,OAAlBF,EAAKK,cAAeD,SAAS,EAAG,G,EA0B1CV,EAAcY,iBAAiB,UAvBC,SAAAC,GAC9BA,EAAMC,iBACNC,QAAQC,IAAIH,EAAMI,OAAOC,SAASC,aAAaC,OAC/CL,QAAQC,IAAIH,EAAMQ,cAAcH,SAASC,aAAaC,OACtDL,QAAQC,IAAIH,EAAMI,OAAOK,kBAAkBF,OAE3C,IFtBsCG,EEsBhCC,EAAcX,EAAMI,OAAOK,kBAAkBF,MAAMK,OAEpDD,IFxBiCD,EE4BbC,EF3BzBE,MAAM,GAAiBlB,OANR,kDAMG,OAAuBA,OAAlBe,EAAS,WAAiBf,OAJnC,mCAImC,0BAAwBmB,MACvE,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAI3B,OAFAhB,QAAQiB,IAAIJ,GAELA,EAASK,M,KEqBjBN,MAAK,SAAAzC,GACJ6B,QAAQiB,IAAI9C,GACZA,EAAKgD,IAAIC,OAAS/B,EAAgClB,EAAKgD,IAAIC,QAC3DjD,EAAKgD,IAAIE,QAAUhC,EAAgClB,EAAKgD,IAAIE,SAE5DjC,EAAiBkC,UAAY7D,EAAoBU,E,IAElDoD,MAAMvB,QAAQwB,K","sources":["src/js/weather-api.js","src/templates/weather-card.hbs","src/js/weather.js"],"sourcesContent":["'use strict';\n\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5/weather';\n//const API_KEY = '95632b02f9162f375a368971925f5209';\nconst API_KEY = '0d227eec6f6f7873830c271248b92428';\n// https://api.openweathermap.org/data/2.5/weather?q=kiev&appid=0d227eec6f6f7873830c271248b92428&lang=ua&units=metric\n\nexport const getWeatherDataByCityName = cityName =>\n  fetch(`${BASE_URL}?q=${cityName}&appid=${API_KEY}&lang=ua&units=metric`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      console.log(response);\n      //console.log(response.json());\n      return response.json();\n    }\n  );\n","<div class='weather__card'>\n  <h2 class='city-name'>{{this.name}}</h2>\n  <ul class='weather-info list'>\n    <li class='weather-info-item'>\n      <p class='temp'>Температура: {{this.main.temp}}<sup>&#176;</sup></p>\n    </li>\n    <li class='weather-info-item'>\n      <p class='feels-like-temp'>Відчувається як:\n        {{this.main.feels_like}}<sup>&#176;</sup></p>\n    </li>\n    <li class='weather-info-item'>\n      <p class='sunrise-time'>Схід сонця: {{this.sys.sunrise}}</p>\n    </li>\n    <li class='weather-info-item'>\n      <p class='sunset-time'>Захід сонця: {{this.sys.sunset}}</p>\n    </li>\n    <li class='weather-info-item'>\n      <p class='clouds'>Хмарність: {{this.clouds.all}}%</p>\n    </li>\n  </ul>\n</div>","// https://www.youtube.com/watch?v=DACuvyOeHi8&t=5040s\n// https://www.weatherbit.io/api\n\n'use strict';\n\nimport { getWeatherDataByCityName } from './weather-api';\nimport weatherCardTemplate from '../templates/weather-card.hbs';\n\n//const searchQuery = 'kiev';\n//getWeatherDataByCityName(searchQuery);\n\nconst weatherFormEl = document.querySelector('.js-search-form');\nconst weatherWrapperEl = document.querySelector('.weather__wrapper');\n\nconst convertSecondsToHoursAndMinutes = seconds => {\n  const date = new Date(seconds * 1000);\n\n  return `${`${date.getHours()}`.padStart(\n    2,\n    0\n  )}:${`${date.getMinutes()}`.padStart(2, 0)}`;\n};\n\nconst handleWeatherFormSubmit = event => {\n  event.preventDefault();\n  console.dir(event.target.elements.user_country.value);\n  console.dir(event.currentTarget.elements.user_country.value);\n  console.dir(event.target.firstElementChild.value);\n\n  const searchQuery = event.target.firstElementChild.value.trim();\n\n  if (!searchQuery) {\n    return;\n  }\n\n  getWeatherDataByCityName(searchQuery)\n    .then(data => {\n      console.log(data);\n      data.sys.sunset = convertSecondsToHoursAndMinutes(data.sys.sunset);\n      data.sys.sunrise = convertSecondsToHoursAndMinutes(data.sys.sunrise);\n\n      weatherWrapperEl.innerHTML = weatherCardTemplate(data);\n    })\n    .catch(console.warn);\n};\n\nweatherFormEl.addEventListener('submit', handleWeatherFormSubmit);\n\n// вопросы из таблицы - 1\n// function calcSumm(numOne, numTwo) {\n//   if (numTwo === 1) {\n//     return numOne;\n//   } else {\n//     return numOne * calcSumm(numOne, numTwo - 1);\n//   }\n// }\n// console.log(calcSumm(2, 3));\n\n// вопросы из таблицы - 2\n// const fetchUsersBtn = document.querySelector('.btn');\n// const userList = document.querySelector('.user-list');\n\n// fetchUsersBtn.addEventListener('click', () => {\n//   fetchUsers()\n//     .then(users => renderUserList(users))\n//     .catch(error => console.log(error));\n// });\n\n// function fetchUsers() {\n//   return fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n//     if (!response.ok) {\n//       throw new Error(response.status);\n//     }\n//     return response.json();\n//   });\n// }\n\n// function renderUserList(users) {\n//   const markup = users\n//     .map(user => {\n//       return `<li>\n//           <p><b>Name</b>: ${user.name}</p>\n//           <p><b>Email</b>: ${user.email}</p>\n//           <p><b>Company</b>: ${user.company.name}</p>\n//         </li>`;\n//     })\n//     .join('');\n//   userList.innerHTML = markup;\n// }\n"],"names":["$5e65010cca4db3f0$export$2e2bcd8739ae039","$parcel$interopDefault","parcelRequire","template","compiler","main","container","depth0","helpers","partials","data","stack1","alias1","lambda","alias2","escapeExpression","lookupProperty","parent","propertyName","Object","prototype","hasOwnProperty","call","useData","$b7c37e8f14632f7d$var$weatherFormEl","document","querySelector","$b7c37e8f14632f7d$var$weatherWrapperEl","$b7c37e8f14632f7d$var$convertSecondsToHoursAndMinutes","seconds","date","Date","concat","getHours","padStart","getMinutes","addEventListener","event","preventDefault","console","dir","target","elements","user_country","value","currentTarget","firstElementChild","cityName","searchQuery","trim","fetch","then","response","ok","Error","status","log","json","sys","sunset","sunrise","innerHTML","catch","warn"],"version":3,"file":"weather.fe2b4cbb.js.map"}